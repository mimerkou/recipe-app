{"version":3,"sources":["components/Form/Form.js","components/Recipe/Recipe.js","components/Alert/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Form","submitHandler","search","setSearch","className","onSubmit","type","id","placeholder","value","onChange","e","target","Recipe","calories","image","ingredients","label","url","useState","showIngredients","setShowIngredients","src","alt","Math","round","href","rel","onClick","map","ing","index","text","Alert","alert","setAlert","useEffect","timeout","setTimeout","console","log","clearTimeout","App","recipes","setRecipes","searchFromSubmit","setSearchFromSubmit","axios","get","then","response","data","hits","catch","error","preventDefault","recipe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAuBeA,EAnBF,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UACpC,OACE,qBAAKC,UAAU,YAAf,SACE,uBAAMC,SAAUJ,EAAhB,UACE,uBACEK,KAAK,OACLC,GAAG,SACHC,YAAY,uBACZC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAUQ,EAAEC,OAAOH,UAEtC,wBAAQH,KAAK,SAASF,UAAU,MAAhC,SACE,mBAAGA,UAAU,0BCQRS,G,MArBA,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAAU,EACjBC,oBAAS,GADQ,mBACxDC,EADwD,KACvCC,EADuC,KAG/D,OACE,sBAAKjB,UAAU,SAAf,UACE,6BAAKa,IACL,qBAAKK,IAAKP,EAAOQ,IAAKN,IACtB,oBAAGb,UAAU,WAAb,uBAAmCoB,KAAKC,MAAMX,MAC9C,mBAAGV,UAAU,MAAMsB,KAAMR,EAAKN,OAAO,SAASe,IAAI,aAAlD,iBACA,wBAAQvB,UAAU,UAAUwB,QAAS,kBAAMP,GAAoBD,IAA/D,yBACEA,GACA,oBAAIhB,UAAU,kBAAd,SACGY,EAAYa,KAAI,SAACC,EAAKC,GACrB,OAAO,oBAAgB3B,UAAU,kBAA1B,SAA6C0B,EAAIE,MAAxCD,aCGbE,G,MAhBD,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SASrB,OARAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAS,IACTI,QAAQC,IAAI,qBACX,KACH,OAAO,kBAAMC,aAAaJ,MACzB,IAGD,qBAAKjC,UAAU,QAAf,SACE,4BAAI8B,Q,yBC2CKQ,EAlDH,WAAO,IAAD,EACcvB,mBAAS,IADvB,mBACTwB,EADS,KACAC,EADA,OAEYzB,mBAAS,IAFrB,mBAETjB,EAFS,KAEDC,EAFC,OAGgCgB,mBAAS,IAHzC,mBAGT0B,EAHS,KAGSC,EAHT,OAIU3B,mBAAS,IAJnB,mBAITe,EAJS,KAIFC,EAJE,KAUhBC,qBAAU,WACRW,IACGC,IADH,0CAC0CH,EAD1C,mBALa,WAKb,oBAJc,qCAMXI,MAAK,SAAAC,GACJX,QAAQC,IAAIU,GACZN,EAAWM,EAASC,KAAKC,MACzBjD,EAAU,OAEXkD,OAAM,SAAAC,GAAK,OAAIf,QAAQC,IAAIc,QAC7B,CAACT,IAYJ,OACE,sBAAKzC,UAAU,MAAf,UACE,4CAEW,KAAV8B,GAAgB,cAAC,EAAD,CAAOA,MAAOA,EAAOC,SAAUA,IAChD,cAAC,EAAD,CAAMlC,cAfY,SAACU,GACrBA,EAAE4C,iBAEa,KAAXrD,EACF4C,EAAoB5C,GAEpBiC,EAAS,gCAS2BjC,OAAQA,EAAQC,UAAWA,IAE/D,yBAASC,UAAU,mBAAnB,SAEEuC,EAAQd,KAAI,SAAC2B,EAAQzB,GACnB,OAAO,cAAC,EAAD,eAAwByB,EAAOA,QAAlBzB,YCpCf0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.beaff20c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Form.css';\r\n\r\n\r\nconst Form = ({submitHandler, search, setSearch}) => {\r\n  return (\r\n    <div className=\"inputForm\">\r\n      <form onSubmit={submitHandler}>\r\n        <input \r\n          type=\"text\" \r\n          id=\"recipe\" \r\n          placeholder=\"Search for recipe...\" \r\n          value={search} \r\n          onChange={(e) => setSearch(e.target.value)} />\r\n        {/* <label htmlFor=\"recipe\">Search for recipe...</label> */}\r\n        <button type=\"submit\" className=\"btn\">\r\n          <i className=\"fas fa-search\"></i>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport './Recipe.css';\r\n\r\nconst Recipe = ({ calories, image, ingredients, label, url }) => {\r\n  const [showIngredients, setShowIngredients] = useState(false);\r\n\r\n  return (\r\n    <div className=\"recipe\">\r\n      <h3>{label}</h3>\r\n      <img src={image} alt={label} />\r\n      <p className=\"calories\">Calories: {Math.round(calories)}</p>\r\n      <a className=\"url\" href={url} target=\"_blank\" rel=\"noreferrer\">URL</a>\r\n      <button className=\"ing-btn\" onClick={() => setShowIngredients(!showIngredients)}>Ingredients</button>\r\n      { showIngredients &&\r\n        <ul className=\"ingredient-list\">\r\n          {ingredients.map((ing, index) => {\r\n            return <li key={index} className=\"ingredient-text\">{ing.text}</li>\r\n          })}\r\n        </ul>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect } from 'react';\r\nimport './Alert.css';\r\n\r\nconst Alert = ({alert, setAlert}) => {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert('');\r\n      console.log('useEffect Alert');\r\n    }, 3000);\r\n    return () => clearTimeout(timeout);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"alert\">\r\n      <p>{alert}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from 'react';\nimport Form from './components/Form/Form';\nimport Recipe from './components/Recipe/Recipe';\nimport Alert from './components/Alert/Alert';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchFromSubmit, setSearchFromSubmit] = useState('');\n  const [alert, setAlert] = useState('');\n\n  const APP_ID = '546cfe89';\n  const APP_KEY = 'e6226ee873dda891aefd4c062398506a';\n  // const url = `https://api.edamam.com/search?q=${searchFromSubmit}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  useEffect(() => {\n    axios\n      .get(`https://api.edamam.com/search?q=${searchFromSubmit}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n      .then(response => {\n        console.log(response);\n        setRecipes(response.data.hits);\n        setSearch('');\n      })\n      .catch(error => console.log(error));\n  }, [searchFromSubmit]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (search !== '') {\n      setSearchFromSubmit(search);\n    } else {\n      setAlert('Please enter a search value');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Recipe App</h1>\n\n      {alert !== '' && <Alert alert={alert} setAlert={setAlert} />}\n      <Form submitHandler={submitHandler} search={search} setSearch={setSearch} />\n\n      <section className=\"recipe-container\">\n      {\n        recipes.map((recipe, index) => {\n          return <Recipe key={index} {...recipe.recipe} />\n        })\n      }\n      </section>\n      \n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}